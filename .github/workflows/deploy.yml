name: CI/CD

on:
  push:
    branches: [ "main" ]   # Trigger on push to main branch
  pull_request:
    branches: [ "main" ]   # Trigger on PRs against main (build/test only)

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install deps (optional)
        run: |
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          python --version

      - name: Build Docker image
        run: |
          docker build -t notely:latest .

  deploy:
    needs: build
    runs-on: ubuntu-latest
    env:
      HAS_GCP_CREDS: ${{ secrets.GCP_SERVICE_ACCOUNT }}
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      ARTIFACT_REPO:  ${{ secrets.ARTIFACT_REPO }}
      REGION: us-central1
      IMAGE_URL: us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPO }}/notely:latest
    steps:
      - name: No creds -> skip deploy
        if: env.HAS_GCP_CREDS == ''
        run: |
          echo "No GCP credentials found. Skipping Cloud Run deploy."
          echo "Local deploy handled via Docker + ngrok."

      - name: Checkout
        if: env.HAS_GCP_CREDS != ''
        uses: actions/checkout@v4

      - name: Set up gcloud
        if: env.HAS_GCP_CREDS != ''
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}
          service_account_key: ${{ env.HAS_GCP_CREDS }}
          export_default_credentials: true

      - name: Configure Docker for Artifact Registry
        if: env.HAS_GCP_CREDS != ''
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev -q

      - name: Deploy to Cloud Run
        if: env.HAS_GCP_CREDS != ''
        run: |
          gcloud run deploy notely \
            --image ${{ env.IMAGE_URL }} \
            --region ${{ env.REGION }} \
            --allow-unauthenticated \
            --project ${{ env.GCP_PROJECT_ID }} \
            --max-instances=4
